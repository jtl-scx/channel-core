<?php
/**
 * ReturnReason
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  JTL\SCX\Lib\Channel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace JTL\SCX\Lib\Channel\Client\Model;

use JTL\SCX\Lib\Channel\Client\EnumInterface;

/**
 * ReturnReason Class Doc Comment
 *
 * @category Class
 * @package  JTL\SCX\Lib\Channel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ReturnReason implements EnumInterface
{
    private $value;

    /**
     * Possible values of this enum
     */
    public const NO_REASON = 'NO_REASON';
    public const DEFECT = 'DEFECT';
    public const WRONG_ITEM = 'WRONG_ITEM';
    public const WRONG_SIZE = 'WRONG_SIZE';
    public const TOO_LATE = 'TOO_LATE';
    public const BAD_QUALITY = 'BAD_QUALITY';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::NO_REASON,
            self::DEFECT,
            self::WRONG_ITEM,
            self::WRONG_SIZE,
            self::TOO_LATE,
            self::BAD_QUALITY,
        ];
    }


    public static function NO_REASON(): ReturnReason
    {
        return new self('NO_REASON');
    }

    public static function DEFECT(): ReturnReason
    {
        return new self('DEFECT');
    }

    public static function WRONG_ITEM(): ReturnReason
    {
        return new self('WRONG_ITEM');
    }

    public static function WRONG_SIZE(): ReturnReason
    {
        return new self('WRONG_SIZE');
    }

    public static function TOO_LATE(): ReturnReason
    {
        return new self('TOO_LATE');
    }

    public static function BAD_QUALITY(): ReturnReason
    {
        return new self('BAD_QUALITY');
    }


    public function __construct($value)
    {
        $this->value = $value;
    }

    public function getValue()
    {
        return $this->value;
    }
}
