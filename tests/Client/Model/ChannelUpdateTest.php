<?php
/**
 * ChannelUpdateTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  JTL\SCX\Lib\Channel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SCX Channel API
 *
 * SCX Channel API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace JTL\SCX\Lib\Channel\Client\Model;

use JTL\SCX\Lib\Channel\Client\AbstractApiModelTest;

/**
 * ChannelUpdateTest Class Doc Comment
 *
 * @category    Class
 * @description ChannelUpdate
 * @package     JTL\SCX\Lib\Channel\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 * @covers      \JTL\SCX\Lib\Channel\Client\Model\ChannelUpdate
 */
class ChannelUpdateTest extends AbstractApiModelTest
{

    /**
     * Test allowed values for channelType
     * @test
     */
    public function it_has_correct_allowed_values_for_channelType(): void
    {
        $allowed = [
            'MARKETPLACE','OTHER',
        ];

        $sut = new ChannelUpdate();
        $this->assertMethodExists($sut, 'getChannelTypeAllowableValues');
        $this->assertEquals($allowed, $sut->getChannelTypeAllowableValues());
    }
    /**
     * @return array
     * @dataProvider
     */
    public function expectedInterface(): array
    {
        return [
            'assert property Group' => [
                'group',
                'string',
                'getGroup',
                'setGroup',
                true
            ],
            'assert property Currency' => [
                'currency',
                'string',
                'getCurrency',
                'setCurrency',
                true
            ],
            'assert property MarketplaceList' => [
                'marketplaceList',
                'string[]',
                'getMarketplaceList',
                'setMarketplaceList',
                false
            ],
            'assert property SupportedLanguages' => [
                'supportedLanguages',
                'string[]',
                'getSupportedLanguages',
                'setSupportedLanguages',
                true
            ],
            'assert property DisplayName' => [
                'displayName',
                'string',
                'getDisplayName',
                'setDisplayName',
                false
            ],
            'assert property Website' => [
                'website',
                'string',
                'getWebsite',
                'setWebsite',
                false
            ],
            'assert property Pricing' => [
                'pricing',
                'string',
                'getPricing',
                'setPricing',
                true
            ],
            'assert property ChannelType' => [
                'channelType',
                'string',
                'getChannelType',
                'setChannelType',
                false
            ],
            'assert property SupportContact' => [
                'supportContact',
                'string',
                'getSupportContact',
                'setSupportContact',
                false
            ],
            'assert property Vendor' => [
                'vendor',
                'string',
                'getVendor',
                'setVendor',
                false
            ],
            'assert property SignUpUrl' => [
                'signUpUrl',
                'string',
                'getSignUpUrl',
                'setSignUpUrl',
                false
            ],
            'assert property UpdateUrl' => [
                'updateUrl',
                'string',
                'getUpdateUrl',
                'setUpdateUrl',
                true
            ],
            'assert property Logo' => [
                'logo',
                'string',
                'getLogo',
                'setLogo',
                true
            ],
            'assert property Description' => [
                'description',
                'string',
                'getDescription',
                'setDescription',
                true
            ],
            'assert property FeatureList' => [
                'featureList',
                '\JTL\SCX\Lib\Channel\Client\Model\ChannelUpdateFeatureList',
                'getFeatureList',
                'setFeatureList',
                false
            ],
        ];
    }

    /**
     * @test
     * @dataProvider expectedInterface
     */
    public function it_has_expected_interface(string $property, string $type, string $expectedGetter, string $expectedSetter, bool $isNullable): void
    {
        $sample = $this->buildSampleForDataType($type);
        $sut = new ChannelUpdate([$property => $sample]);

        $this->assertMethodExists($sut, $expectedGetter);
        $this->assertSame($sample, $sut->$expectedGetter());

        $this->assertArrayHasKey($property, $sut);
        $this->assertSame($sample, $sut[$property]);

        $newSample = $this->buildSampleForDataType($type);
        $this->assertMethodExists($sut, $expectedSetter);
        $sut->$expectedSetter($newSample);
        $this->assertSame($newSample, $sut[$property]);

        if ($isNullable) {
            $sut = new ChannelUpdate([$property => null]);
            $this->assertNull($sut->$expectedGetter());

            $sut->$expectedSetter(null);
            $this->assertNull($sut->$expectedGetter());
        }
    }
}
